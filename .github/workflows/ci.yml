name: Cargo Build & Test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: cargo build --verbose
      - run: cargo test --verbose

  netlify_preview:
    name: Netlify deploy
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Install trunk
        uses: giantswarm/install-binary-action@v1.0.0
        with:
          binary: "trunk"
          version: "v0.16.0"
          download_url: "https://github.com/thedodd/trunk/releases/download/${version}/trunk-x86_64-unknown-linux-gnu.tar.gz"
          tarball_binary_path: "${binary}"
          smoke_test: "${binary} --version"
      
      - run: trunk build
        working-directory: gpt-frontend

      - name: Deploy preview to Netlify
        if: ${{ github.event_name == 'pull_request' }}
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './gpt-frontend/dist'
          production-branch: main
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: Deploy from GitHub Actions
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          github-deployment-environment: deployment_preview_pr_${{ github.event.number }}
          github-deployment-description: Preview environment for PR ${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

      - name: Deploy production to Netlify
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './gpt-frontend/dist'
          production-branch: main
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: Deploy from GitHub Actions
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          github-deployment-environment: production
          github-deployment-description: Production deployment from the latest commit of main
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
